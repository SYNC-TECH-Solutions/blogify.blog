/**
 * @fileoverview Firestore Security Rules for the Blogify CMS.
 *
 * Core Philosophy:
 * This ruleset allows public read access to blog posts while restricting write access to authenticated administrators only.
 *
 * Data Structure:
 * Blog posts are stored in the `/artifacts/{appId}/public/data/blog_posts/{blogPostId}` collection. The `appId` parameter identifies the specific application.
 *
 * Key Security Decisions:
 * - Public read access is granted to all blog posts.
 * - Write access (create, update, delete) is restricted to authenticated users. No role or ownership checks are implemented.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants public read access to blog posts and restricts write access to authenticated users.
     * @path /artifacts/{appId}/public/data/blog_posts/{blogPostId}
     * @allow (get, list) Allows any user to read blog posts.
     * @allow (create, update, delete) Allows authenticated users to modify blog posts.
     * @deny (create, update, delete) Denies unauthenticated users from modifying blog posts.
     * @principle Allows public reads, restricts writes to authenticated users.
     */
    match /artifacts/{appId}/public/data/blog_posts/{blogPostId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    // Define helper functions
    function isSignedIn() {
      return request.auth != null;
    }
  }
}