{
  "entities": {
    "BlogPost": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "BlogPost",
      "type": "object",
      "description": "Represents a blog post in the Blogify CMS.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the blog post entity."
        },
        "title": {
          "type": "string",
          "description": "The title of the blog post."
        },
        "content": {
          "type": "string",
          "description": "The main content or body of the blog post."
        },
        "authorId": {
          "type": "string",
          "description": "Reference to the Author. (Relationship: Author 1:N BlogPost)"
        },
        "isPublished": {
          "type": "boolean",
          "description": "Indicates whether the blog post is published or not."
        },
        "createdAt": {
          "type": "string",
          "description": "The timestamp when the blog post was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "The timestamp when the blog post was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "title",
        "content",
        "authorId",
        "isPublished",
        "createdAt",
        "updatedAt"
      ]
    },
    "Author": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Author",
      "type": "object",
      "description": "Represents the author of a blog post.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the author entity."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the author."
        },
        "email": {
          "type": "string",
          "description": "The email address of the author.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "displayName",
        "email"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/artifacts/{appId}/public/data/blog_posts/{blogPostId}",
        "definition": {
          "entityName": "BlogPost",
          "schema": {
            "$ref": "#/backend/entities/BlogPost"
          },
          "description": "Stores blog post data. The appId parameter identifies the specific application, and the blogPostId parameter is the unique identifier for each blog post.",
          "params": [
            {
              "name": "appId",
              "description": "The unique identifier for the Blogify CMS application. This is retrieved from the environment variable __app_id."
            },
            {
              "name": "blogPostId",
              "description": "The unique identifier for each blog post."
            }
          ]
        }
      }
    ],
    "reasoning": "This Firestore data structure is designed to support a blog CMS with real-time updates and secure admin access, emphasizing authorization independence, clarity, and scalability. All blog posts are stored under a predictable path, `/artifacts/{appId}/public/data/blog_posts/{blogPostId}`. This flat structure simplifies security rules and eliminates the need for complex hierarchical authorization. Since the blog posts are all public, no user-based hierarchy is required, and no denormalization is necessary. The application enforces security at two layers: Firebase Authentication (Layer 1) and a local UI gate (Layer 2), as described in the prompt. The Firebase Authentication ensures that only the authenticated admin (verified via custom token) can perform write operations. The local UI gate provides an additional layer of security, requiring a password to access the Admin Dashboard. This separation of concerns enhances security and maintainability."
  }
}